# .github/workflows/build-mkdocs-folders.yml

name: Build all MkDocs projects into /docs folder

on:
  push:
    branches:
      - main # <<< NUR bei Push/Merge auf gh-pages Branch

permissions:
  contents: write

jobs:
  build-all-mkdocs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install MkDocs
        run: pip install mkdocs jinja2-cli

      - name: Render mkdocs.yml from templates
        run: |
          echo "Checking for xfsc-spec-1 mkdocs.yml.j2..."
          if [ -f "./xfsc-spec-1/mkdocs.yml.j2" ]; then
              echo "Found xfsc-spec-1/mkdocs.yml.j2"
          else
              echo "xfsc-spec-1/mkdocs.yml.j2 not found!"
          fi

          echo "Rendering xfsc-spec-1 mkdocs.yml..."
          jinja2 ./xfsc-spec-1/mkdocs.yml.j2 > ./xfsc-spec-1/mkdocs.yml

          if [ -f "./xfsc-spec-1/mkdocs.yml" ]; then
              echo "xfsc-spec-1/mkdocs.yml successfully generated!"
              head -n 10 ./xfsc-spec-1/mkdocs.yml
          else
              echo "Failed to generate xfsc-spec-1/mkdocs.yml"
          fi

          # Render all other mkdocs.yml.j2 files
          for template in $(find . -name "mkdocs.yml.j2" ! -path "./xfsc-spec-1/mkdocs.yml.j2"); do
              dir=$(dirname "$template")
              echo "Rendering $template -> $dir/mkdocs.yml"
              jinja2 "$template" > "$dir/mkdocs.yml"
          done

          # PDF configs (optional, not used for site build)
          for template in $(find . -name "mkdocs.pdf.yml.j2"); do
            dir=$(dirname "$template")
            echo "Rendering PDF template $template -> $dir/mkdocs.pdf.yml"
            jinja2 "$template" > "$dir/mkdocs.pdf.yml"
          done

      - name: Build all MkDocs projects
        run: |
          mkdir -p docs
          
          # Suche alle Ordner mit einer mkdocs.yml
          for mkdocs_file in $(find . -name "mkdocs.yml"); do
            dir=$(dirname "$mkdocs_file")
            name=$(basename "$dir")
            
            echo "Building MkDocs project in $dir..."

            mkdocs build --clean --site-dir "../docs/$name" -f "$mkdocs_file"
          
          echo "Checking if docs/xfsc-spec-1 exists after build..."
          if [ -d "./docs/xfsc-spec-1" ]; then
              echo "xfsc-spec-1 site built into docs/xfsc-spec-1/"
              ls -R ./docs/xfsc-spec-1 | head -n 20
          else
              echo "xfsc-spec-1 docs not found in docs/"
          fi

          done
      
      - name: Debug branch
        run: echo "Workflow triggered on branch $GITHUB_REF"
          
      - name: Commit and push docs folder
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Switch to build-pages branch
          git fetch origin build-pages
          git checkout build-pages

          # Remove old contents
          git rm -rf . 

          # Copy new site files
          cp -r docs/* .
 
          git config user.name "Jessia2597"
          git config user.email "jessia.joby@eco.de"

          git add docs
          
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update built MkDocs documentation"
            git push origin build-pages
          fi
